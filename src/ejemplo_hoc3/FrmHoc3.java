/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ejemplo_hoc3;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;

/**
 *
 * @author Rebus
 */
public class FrmHoc3 extends javax.swing.JFrame {
    AnalizadorSintactico Sintac;

    /**
     * Creates new form FrmHoc3
     */
    public FrmHoc3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        TextoAAnalizar = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtResultSintactico = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaTokens = new javax.swing.JTextArea();
        btnAnalizLexico = new javax.swing.JButton();
        btnSintactico = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TextoAAnalizar.setColumns(20);
        TextoAAnalizar.setRows(5);
        jScrollPane2.setViewportView(TextoAAnalizar);

        txtResultSintactico.setColumns(20);
        txtResultSintactico.setRows(5);
        jScrollPane3.setViewportView(txtResultSintactico);

        txtAreaTokens.setColumns(20);
        txtAreaTokens.setRows(5);
        jScrollPane4.setViewportView(txtAreaTokens);

        btnAnalizLexico.setText("Analizar Lexicamente");
        btnAnalizLexico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizLexicoActionPerformed(evt);
            }
        });

        btnSintactico.setText("Analizar Sintacticamente");
        btnSintactico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSintacticoActionPerformed(evt);
            }
        });

        jLabel1.setText("Ingrese expresion a analizar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAnalizLexico, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1)))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSintactico)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnSintactico))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(21, 21, 21)
                .addComponent(btnAnalizLexico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSintacticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSintacticoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSintacticoActionPerformed

    private void btnAnalizLexicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizLexicoActionPerformed
        // TODO add your handling code here:
        Symbol simb;
        String Lexema = new String();
        String CadAux = new String();
        File ArchEntrada = new File("ArchEntrada.txt");
        PrintWriter escribir;
        txtAreaTokens.setText("");
        
        try {
            escribir = new PrintWriter(ArchEntrada);
            escribir.print(TextoAAnalizar.getText());
            escribir.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmHoc3.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Reader lector;
            lector = new FileReader("ArchEntrada.txt");
            
            AnalizadorLexico AnalizLexico = new AnalizadorLexico(lector);
            
            do{
                simb = AnalizLexico.next_token();
                CadAux = Integer.toString(simb.sym);
                Lexema = AnalizLexico.yytext();
                if(simb.sym == AnalizadorSintacticoSym.EOF)
                    CadAux = "Token: " +CadAux + "\tIdentTOKEN:FIN \n";
                else
                    switch (simb.sym) {
                        case AnalizadorSintacticoSym.SEMIC:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: SEMIC \t Lexema:" + Lexema+ "\n";
                            break;
                            
                        case AnalizadorSintacticoSym.NUM:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: NUM \t Lexema:" + Lexema+ "\n";
                            break;
                            
                        case AnalizadorSintacticoSym.CONST_PRED:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: CONST_PRED \t Lexema:" + Lexema+ "\n";
                            break;
                            
                        case AnalizadorSintacticoSym.BLTIN:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: BLTIN \t Lexema:" + Lexema+ "\n";
                            break;    
                            
                        case AnalizadorSintacticoSym.OpAsig:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: OpAsig \t Lexema:" + Lexema+ "\n";
                            break;

			case AnalizadorSintacticoSym.OpSuma:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: OpSuma \t Lexema:" + Lexema+ "\n";
                            break;

			case AnalizadorSintacticoSym.OpResta:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: OpResta \t Lexema:" + Lexema+ "\n";
                            break;

            		case AnalizadorSintacticoSym.OpProd:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: OpProd \t Lexema:" + Lexema+ "\n";
                            break;

			case AnalizadorSintacticoSym.OpDiv:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: OpDiv \t Lexema:" + Lexema+ "\n";
                            break;
						
			case AnalizadorSintacticoSym.ParIzq:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: ParIzq \t Lexema:" + Lexema+ "\n";
                            break;

                        case AnalizadorSintacticoSym.ParDer:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: ParDer \t Lexema:" + Lexema+ "\n";
                            break;

			case AnalizadorSintacticoSym.error:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: ERROR \t Lexema:" + Lexema+ "\n";
                            break;

                        case AnalizadorSintacticoSym.VAR:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: VAR \t Lexema:" + Lexema+ "\n";
                            break;

			case AnalizadorSintacticoSym.OpPotencia:
                            CadAux = "Token: " +CadAux + "\tIdentTOKEN: OpPotencia \t Lexema:" + Lexema+ "\n";
                            break;
                            
                        default:
                            CadAux= "Token: " +CadAux + "\tIdentTOKEN: OTRO \tLexema:";
                    }
                txtAreaTokens.append(CadAux);
            }while (simb.sym!= AnalizadorSintacticoSym.EOF);
            
        } catch (IOException ex) {
            txtAreaTokens.append("Entro al catch \n");
            Logger.getLogger(FrmHoc3.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtAreaTokens.repaint();
    }//GEN-LAST:event_btnAnalizLexicoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmHoc3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmHoc3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmHoc3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmHoc3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmHoc3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextoAAnalizar;
    private javax.swing.JButton btnAnalizLexico;
    private javax.swing.JButton btnSintactico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea txtAreaTokens;
    private javax.swing.JTextArea txtResultSintactico;
    // End of variables declaration//GEN-END:variables
}
